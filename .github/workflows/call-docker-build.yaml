---
# template source: https://github.com/bretfisher/docker-build-workflow/blob/main/templates/call-docker-build.yaml
name: Docker Build

on:
  push:
    branches:
      - main
    # don't rebuild image if someone only edited unrelated files
    paths-ignore:
      - 'README.md'
      - '.github/linters/**'
  pull_request:
    # don't rebuild image if someone only edited unrelated files
    paths-ignore:
      - 'README.md'
      - '.github/linters/**'
  #schedule:
    # re-run montly to keep image fresh with upstream base images
  #  - cron: '0 12 15 * *'
  workflow_dispatch:
    # run manually from Actions tab

env:
  IMAGE_NAME: httpenv

jobs:
  
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker Engine
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true
          tags: ${{ github.run_id }}
          target: test
          cache-from: type=gha
          cache-to: type-gha,mode=max
          platforms: linux/amd64

      - name: Run Trivy for all CVEs (non-blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.run_id }}
          exit-code: 0
          format: table

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=05
          # type=raw,value=latest,enable=${{ endsWith(github.ref,github.event.respository.default_branch) }}
          # type=ref,event=pr
          # type=ref,event=branch
          # type=semver,pattern={{version}}

      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      # - name: Find comment for image tags
      #   uses: peter-evans/find-comment@v3
      #   if: github.event_name == 'pull_request'
      #   id: fc
      #   with:
      #     issue-number: ${{ github.event.pull_request.number }}
      #     comment-author: 'github-actions[bot]'
      #     body-includes: Docker image tag(s) pushed

      # - name: Create or update comment for image tags
      #   uses: peter-evans/create-or-update-comment@v4
      #   if: github.event_name == 'pull_request'
      #   with:
      #     comment-id: ${{ steps.fc.outputs.comment-id }}
      #     issue-number: ${{ github.event.pull_request.number }}
      #     body: |
      #       Docker image tag(s) pushed:
      #       ```text
      #       ${{ steps.docker_meta.outputs.tags }}
      #       ```
            
      #       Labels added to images:
      #       ```text
      #       ${{ steps.docker_meta.outputs.labels }}
      #       ```
      #     edit-mode: replace
